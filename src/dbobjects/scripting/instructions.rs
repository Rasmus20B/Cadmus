
use serde::{Deserialize, Serialize};

use crate::dbobjects::calculation::Calculation;
use crate::dbobjects::reference::*;

use super::arguments::*;

#[derive(Debug, Clone, Serialize, Deserialize, PartialEq)]
#[repr(u16)] pub enum Instruction {
	PerformScript { script: ScriptSelection, args: Calculation },
	SaveACopyAsXml,
	GoToNextField,
	GoToPreviousField,
	GoToLayout { layout: LayoutSelection, animation: LayoutAnimation },
	NewRecordRequest,
        DuplicateRecordRequest,
	DeleteRecordRequest,
	DeleteAllRecords,
	InsertFromIndex,
	InsertFromLastVisited,
	InsertCurrentDate,
	InsertCurrentTime,
	GoToRecordRequestPage,
	GoToField,
	CheckSelection,
	CheckRecord,
	CheckFoundSet,
	UnsortRecords,
	EnterFindMode,
	ShowAllRecords,
	ModifyLastFind,
	OmitRecord,
	OmitMultipleRecords,
	ShowOmmitedOnly,
	PerformFind,
	ShowHideToolbars,
	ViewAs,
	AdjustWindow,
	OpenHelp,
	OpenFile,
	CloseFile,
	ImportRecords,
	ExportRecords,
	SaveACopyAs,
	OpenManageDatabase,
	SortRecords,
	RelookupFieldContents,
	EnterPreviewMode,
	PrintSetup,
	Print,
	ExitApplication,
	UndoRedo,
	Cut,
	Copy,
	Paste,
	Clear,
	SelectAll,
	RevertRecordRequest,
	EnterBrowserMode,
	InsertPicture,
	SendEvent,
	InsertCurrentUserName,
	InsertText,
	PauseResumeScript,
	SendMail,
	SendDdeExecute,
	DialPhone,
	Speak,
	PerformApplescript,
	If { condition: Calculation },
	Else,
	EndIf,
	Loop,
	ExitLoopIf { condition: Calculation } ,
	EndLoop,
	GoToRelatedRecord,
	CommitRecordsRequests,
	SetField { field: FieldReference, value: Calculation },
	InsertCalculatedResult,
	FreezeWindow,
	RefreshWindow,
	ScrollWindow,
	NewFile,
	ChangePassword,
	SetMultiUser,
	AllowUserAbort,
	SetErrorCapture,
	ShowCustomDialog,
	OpenScriptWorkspace,
	BlankLineComment,
	HaltScript,
	ReplaceFieldContents,
	ShowHideTextRuler,
	Beep,
	SetUseSystemFormats,
	RecoverFile,
	SaveACopyAsAddOnPackage,
	SetZoomLevel,
	CopyAllRecordsRequests,
	GoToPortalRow,
	CopyRecordRequest,
	FluchCacheToDisk,
	ExitScript { value: Calculation },
	DeletePortalRow,
	OpenPreferences,
	CorrectWord,
	SpellingOptions,
	SelectDictionaries,
	EditUserDictionary,
	OpenUrl,
	OpenManageValueLists,
	OpenSharing,
	OpenFileOptions,
	AllowFormattingBar,
	SetNextSerialValue,
	ExecuteSql,
	OpenHosts,
	MoveResizeWindow,
	ArrangeAllWindows,
	CloseWindow,
	NewWindow,
	SelectWindow,
	SetWindowTitle,
	ElseIf { condition: Calculation },
	ConstrainFoundSet,
	ExtendFoundSet,
	PerformFindReplace,
	OpenFindReplace,
	SetSelection,
	InsertFile,
	ExportFieldContents,
	OpenRecordRequest,
	AddAccount,
	DeleteAccount,
	ResetAccountPassword,
	EnableAccount,
	Relogin,
	ConvertFile,
	OpenManageDataSources,
	SetVariable { name: String, value: Calculation, repetition: Calculation },
	InstallMenuSet,
	SaveRecordsAsExcel,
	SaveRecordsAsPdf,
	GoToObject,
	SetWebViewer,
	SetFieldByName,
	InstallOntimerScript,
	OpenEditSavedFinds,
	PerformQuickFind,
	OpenManageLayouts,
	SaveRecordsAsSnapshotLink,
	SortRecordsByField,
	FindMatchingRecords,
	ManageContainers,
	InstallPluginFile,
	InsertPdf,
	InsertAudioVideo,
	InsertFromUrl,
	InsertFromDevice,
	PerformScriptOnServer,
	OpenManageThemes,
	ShowHideMenubar,
	RefreshObject,
	SetLayoutObjectAnimation,
	ClosePopover,
	OpenUploadToHost,
	EnableTouchKeyboard,
	PerformJavascriptInWebViewer,
    CommentedOut,
	AvplayerPlay,
	AvplayerSetPlaybackState,
	AvplayerSetOptions,
	RefreshPortal,
	GetFolderPath,
	TruncateTable,
	OpenFavorites,
	ConfigureRegionMonitorScript,
	ConfigureLocalNotification,
	GetFileExists,
	GetFileSize,
	CreateDataFile,
	OpenDataFile,
	WriteToDataFile,
	ReadFromDataFile,
	GetDataFilePosition,
	SetDataFilePosition,
	CloseDataFile,
	DeleteFile,
	RenameFile,
	SetErrorLogging,
	ConfigureNfcReading,
	ConfigureMachineLearningModel,
	ExecuteFilemakerDataApi,
	OpenTransaction,
	CommitTransaction,
	RevertTransaction,
	SetSessionIdentifier,
	SetDictionary,
	PerformScriptOnServerWithCallback,
	TriggerClarisConnectFlow,
        Assert,
}

//impl FromStr for Instruction {
//    type Err = ();
//    fn from_str(input: &str) -> Result<Instruction, Self::Err> {
//        match input {
//            "perform_script" => Ok(Instruction::PerformScript),
//            "go_to_layout" => Ok(Instruction::GoToLayout),
//            "go_to_record" | "go_to_request" => Ok(Instruction::GoToRecordRequestPage),
//            "enter_find_mode" => Ok(Instruction::EnterFindMode),
//            "perform_find" => Ok(Instruction::PerformFind),
//            "show_all_records" => Ok(Instruction::ShowAllRecords),
//            "set_field" => Ok(Instruction::SetField),
//            "set_variable" => Ok(Instruction::SetVariable),
//            "loop" => Ok(Instruction::Loop),
//            "if" => Ok(Instruction::If),
//            "elif" => Ok(Instruction::ElseIf),
//            "else" => Ok(Instruction::Else),
//            "exit_loop_if" => Ok(Instruction::ExitLoopIf),
//            "new_record_request" => Ok(Instruction::NewRecordRequest),
//            "exit_script" => Ok(Instruction::ExitScript),
//            "show_custom_dialog" => Ok(Instruction::ShowCustomDialog),
//            "assert" => Ok(Instruction::Assert),
//            _ => Err(()),
//        }
//    }
//}

//pub static INSTRUCTIONMAP : [Option<Instruction>; 255] = [
//    None,
//	  Some(Instruction::PerformScript),
//    None,
//	  Some(Instruction::SaveACopyAsXml),
//	  Some(Instruction::GoToNextField),
//	  Some(Instruction::GoToPreviousField),
//	  Some(Instruction::GoToLayout),
//	  Some(Instruction::NewRecordRequest),
//    Some(Instruction::DuplicateRecordRequest),
//	  Some(Instruction::DeleteRecordRequest),
//	  Some(Instruction::DeleteAllRecords),
//	  Some(Instruction::InsertFromIndex),
//	  Some(Instruction::InsertFromLastVisited),
//	  Some(Instruction::InsertCurrentDate),
//	  Some(Instruction::InsertCurrentTime),
//    None,
//	  Some(Instruction::GoToRecordRequestPage),
//	  Some(Instruction::GoToField),
//	  Some(Instruction::CheckSelection),
//	  Some(Instruction::CheckRecord),
//	  Some(Instruction::CheckFoundSet),
//	  Some(Instruction::UnsortRecords),
//	  Some(Instruction::EnterFindMode),
//	  Some(Instruction::ShowAllRecords),
//	  Some(Instruction::ModifyLastFind),
//	  Some(Instruction::OmitRecord),
//	  Some(Instruction::OmitMultipleRecords),
//	  Some(Instruction::ShowOmmitedOnly),
//	  Some(Instruction::PerformFind),
//	  Some(Instruction::ShowHideToolbars),
//	  Some(Instruction::ViewAs),
//	  Some(Instruction::AdjustWindow),
//	  Some(Instruction::OpenHelp),
//	  Some(Instruction::OpenFile),
//	  Some(Instruction::CloseFile),
//	  Some(Instruction::ImportRecords),
//	  Some(Instruction::ExportRecords),
//	  Some(Instruction::SaveACopyAs),
//	  Some(Instruction::OpenManageDatabase),
//	  Some(Instruction::SortRecords),
//	  Some(Instruction::RelookupFieldContents),
//	  Some(Instruction::EnterPreviewMode),
//	  Some(Instruction::PrintSetup),
//	  Some(Instruction::Print),
//	  Some(Instruction::ExitApplication),
//	  Some(Instruction::UndoRedo),
//	  Some(Instruction::Cut),
//	  Some(Instruction::Copy),
//	  Some(Instruction::Paste),
//	  Some(Instruction::Clear),
//	  Some(Instruction::SelectAll),
//	  Some(Instruction::RevertRecordRequest),
//    None,
//    None,
//    None,
//	  Some(Instruction::EnterBrowserMode),
//	  Some(Instruction::InsertPicture),
//	  Some(Instruction::SendEvent),
//    None,
//    None,
//	  Some(Instruction::InsertCurrentUserName),
//	  Some(Instruction::InsertText),
//	  Some(Instruction::PauseResumeScript),
//	  Some(Instruction::SendMail),
//	  Some(Instruction::SendDdeExecute),
//	  Some(Instruction::DialPhone),
//	  Some(Instruction::Speak),
//	  Some(Instruction::PerformApplescript),
//	  Some(Instruction::If),
//	  Some(Instruction::Else),
//	  Some(Instruction::EndIf),
//	  Some(Instruction::Loop),
//	  Some(Instruction::ExitLoopIf),
//	  Some(Instruction::EndLoop),
//	  Some(Instruction::GoToRelatedRecord),
//	  Some(Instruction::CommitRecordsRequests),
//	  Some(Instruction::SetField),
//	  Some(Instruction::InsertCalculatedResult),
//    None,
//	  Some(Instruction::FreezeWindow),
//	  Some(Instruction::RefreshWindow),
//	  Some(Instruction::ScrollWindow),
//	  Some(Instruction::NewFile),
//	  Some(Instruction::ChangePassword),
//	  Some(Instruction::SetMultiUser),
//	  Some(Instruction::AllowUserAbort),
//	  Some(Instruction::SetErrorCapture),
//	  Some(Instruction::ShowCustomDialog),
//	  Some(Instruction::OpenScriptWorkspace),
//	  Some(Instruction::BlankLineComment),
//	  Some(Instruction::HaltScript),
//	  Some(Instruction::ReplaceFieldContents),
//	  Some(Instruction::ShowHideTextRuler),
//	  Some(Instruction::Beep),
//	  Some(Instruction::SetUseSystemFormats),
//	  Some(Instruction::RecoverFile),
//	  Some(Instruction::SaveACopyAsAddOnPackage),
//	  Some(Instruction::SetZoomLevel),
//	  Some(Instruction::CopyAllRecordsRequests),
//	  Some(Instruction::GoToPortalRow),
//    None,
//	  Some(Instruction::CopyRecordRequest),
//	  Some(Instruction::FluchCacheToDisk),
//	  Some(Instruction::ExitScript),
//	  Some(Instruction::DeletePortalRow),
//	  Some(Instruction::OpenPreferences),
//	  Some(Instruction::CorrectWord),
//	  Some(Instruction::SpellingOptions),
//	  Some(Instruction::SelectDictionaries),
//	  Some(Instruction::EditUserDictionary),
//    None,
//	  Some(Instruction::OpenUrl),
//	  Some(Instruction::OpenManageValueLists),
//	  Some(Instruction::OpenSharing),
//	  Some(Instruction::OpenFileOptions),
//	  Some(Instruction::AllowFormattingBar),
//	  Some(Instruction::SetNextSerialValue),
//	  Some(Instruction::ExecuteSql),
//	  Some(Instruction::OpenHosts),
//	  Some(Instruction::MoveResizeWindow),
//	  Some(Instruction::ArrangeAllWindows),
//	  Some(Instruction::CloseWindow),
//	  Some(Instruction::NewWindow),
//	  Some(Instruction::SelectWindow),
//	  Some(Instruction::SetWindowTitle),
//	  Some(Instruction::ElseIf),
//	  Some(Instruction::ConstrainFoundSet),
//	  Some(Instruction::ExtendFoundSet),
//	  Some(Instruction::PerformFindReplace),
//	  Some(Instruction::OpenFindReplace),
//	  Some(Instruction::SetSelection),
//	  Some(Instruction::InsertFile),
//	  Some(Instruction::ExportFieldContents),
//	  Some(Instruction::OpenRecordRequest),
//	  Some(Instruction::AddAccount),
//	  Some(Instruction::DeleteAccount),
//	  Some(Instruction::ResetAccountPassword),
//	  Some(Instruction::EnableAccount),
//	  Some(Instruction::Relogin),
//	  Some(Instruction::ConvertFile),
//	  Some(Instruction::OpenManageDataSources),
//	  Some(Instruction::SetVariable),
//	  Some(Instruction::InstallMenuSet),
//	  Some(Instruction::SaveRecordsAsExcel),
//	  Some(Instruction::SaveRecordsAsPdf),
//	  Some(Instruction::GoToObject),
//	  Some(Instruction::SetWebViewer),
//	  Some(Instruction::SetFieldByName),
//	  Some(Instruction::InstallOntimerScript),
//	  Some(Instruction::OpenEditSavedFinds),
//	  Some(Instruction::PerformQuickFind),
//	  Some(Instruction::OpenManageLayouts),
//	  Some(Instruction::SaveRecordsAsSnapshotLink),
//    None,
//	  Some(Instruction::SortRecordsByField),
//	  Some(Instruction::FindMatchingRecords),
//	  Some(Instruction::ManageContainers),
//	  Some(Instruction::InstallPluginFile),
//	  Some(Instruction::InsertPdf),
//	  Some(Instruction::InsertAudioVideo),
//	  Some(Instruction::InsertFromUrl),
//	  Some(Instruction::InsertFromDevice),
//    None,
//    None,
//	  Some(Instruction::PerformScriptOnServer),
//	  Some(Instruction::OpenManageThemes),
//	  Some(Instruction::ShowHideMenubar),
//	  Some(Instruction::RefreshObject),
//	  Some(Instruction::SetLayoutObjectAnimation),
//	  Some(Instruction::ClosePopover),
//    None,
//    None,
//	  Some(Instruction::OpenUploadToHost),
//    None,
//	  Some(Instruction::EnableTouchKeyboard),
//	  Some(Instruction::PerformJavascriptInWebViewer),
//      Some(Instruction::CommentedOut),
//	  Some(Instruction::AvplayerPlay),
//	  Some(Instruction::AvplayerSetPlaybackState),
//	  Some(Instruction::AvplayerSetOptions),
//	  Some(Instruction::RefreshPortal),
//	  Some(Instruction::GetFolderPath),
//	  Some(Instruction::TruncateTable),
//	  Some(Instruction::OpenFavorites),
//    None,
//	  Some(Instruction::ConfigureRegionMonitorScript),
//    None,
//	  Some(Instruction::ConfigureLocalNotification),
//	  Some(Instruction::GetFileExists),
//	  Some(Instruction::GetFileSize),
//	  Some(Instruction::CreateDataFile),
//	  Some(Instruction::OpenDataFile),
//	  Some(Instruction::WriteToDataFile),
//	  Some(Instruction::ReadFromDataFile),
//	  Some(Instruction::GetDataFilePosition),
//	  Some(Instruction::SetDataFilePosition),
//	  Some(Instruction::CloseDataFile),
//	  Some(Instruction::DeleteFile),
//    None,
//	  Some(Instruction::RenameFile),
//	  Some(Instruction::SetErrorLogging),
//	  Some(Instruction::ConfigureNfcReading),
//	  Some(Instruction::ConfigureMachineLearningModel),
//	  Some(Instruction::ExecuteFilemakerDataApi),
//    None,
//	  Some(Instruction::OpenTransaction),
//	  Some(Instruction::CommitTransaction),
//	  Some(Instruction::RevertTransaction),
//	  Some(Instruction::SetSessionIdentifier),
//	  Some(Instruction::SetDictionary),
//	  Some(Instruction::PerformScriptOnServerWithCallback),
//	  Some(Instruction::TriggerClarisConnectFlow),
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    None,
//    Some(Instruction::Assert),
//];

impl Instruction {
    pub fn new(name: &str, args: &Vec<(Option<String>, String)>) -> Self {
        todo!()
    }

    pub fn get_opcode(&self) -> u32 {
        match self {
            Instruction::PerformScript { .. } => 1,
            _ => 0,
        }
    }
}
